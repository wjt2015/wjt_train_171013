<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="javaweb.mapper.AccountRoleMapper">
  <resultMap id="BaseResultMap" type="javaweb.entity.AccountRoleEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="qtalk" jdbcType="VARCHAR" property="qtalk" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="available" jdbcType="TINYINT" property="available" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, qtalk, role_id, available, create_time, create_user, update_time, update_user
  </sql>
  <select id="query" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from account_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="save" parameterType="javaweb.entity.AccountRoleEntity">
    insert into account_role (id, qtalk, role_id, 
      available, create_time, create_user, 
      update_time, update_user)
    values (#{id,jdbcType=INTEGER}, #{qtalk,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{available,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="save" parameterType="javaweb.entity.AccountRoleEntity">
    insert into account_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="qtalk != null">
        qtalk,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="qtalk != null">
        #{qtalk,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="javaweb.entity.AccountRoleEntity">
    update account_role
    <set>
      <if test="qtalk != null">
        qtalk = #{qtalk,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="update" parameterType="javaweb.entity.AccountRoleEntity">
    update account_role
    set qtalk = #{qtalk,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      available = #{available,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>